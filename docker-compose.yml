version: '3.8'
services:

    php:
        build:
            args:
                user: dev
                uid: 1000
            context: .
            dockerfile: Dockerfile
        image: todo-task-php
        container_name: todo-task-php
        restart: unless-stopped
        working_dir: /var/www
        depends_on:
            - pgsql
        volumes:
            - ./:/var/www
            - ./docker-compose/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            - ./docker-compose/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
        extra_hosts:
            - "host.docker.internal:host-gateway"
        networks:
            - todo-task

    nginx:
        image: nginx:alpine
        container_name: todo-task-nginx
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx/conf.d/:/etc/nginx/conf.d/
        extra_hosts:
            - "host.docker.internal:host-gateway"
        networks:
            - todo-task

    pgsql:
        image: postgres:latest
        container_name: todo-task-pgsql
        restart: unless-stopped
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_DATABASE}
            PGDATA: /var/lib/postgresql/data/pgdata
        volumes:
            - pgdata:/var/lib/postgresql/data/pgdata
        networks:
            - todo-task

    elasticsearch:
        deploy:
            resources:
                limits:
                    memory: 2g
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
        ports:
            - ${ELASTICSEARCH_PORT}:9200
        environment:
            - ELASTIC_PASSWORD=${ELASTICSEARCH_PASS}
            - ELASTIC_USERNAME=${ELASTICSEARCH_USER}
            - node.name=es01
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - xpack.security.enabled=false
        volumes:
            - esdata01:/usr/share/elasticsearch/data
        networks:
            - todo-task
        ulimits:
            memlock:
                soft: -1
                hard: -1
        healthcheck:
            test:
              [
                  "CMD-SHELL",
                  "curl -s http://localhost:9200 | grep -q 'missing authentication credentials'",
              ]
            interval: 10s
            timeout: 10s
            retries: 120

    kibana:
        depends_on:
            - elasticsearch
        image: docker.elastic.co/kibana/kibana:8.10.2
        container_name: kibana
        volumes:
            - kibanadata:/usr/share/kibana/data
        ports:
            - ${KIBANA_PORT}:5601
        restart: always
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        networks:
            - todo-task

    pgadmin:
        container_name: todi-task-pgadmin
        image: dpage/pgadmin4:latest
        environment:
            PGADMIN_DEFAULT_EMAIL: "todo@api.list"
            PGADMIN_DEFAULT_PASSWORD: "root"
            PGADMIN_CONFIG_SERVER_MODE: "False"
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        ports:
            - "5050:80"
        restart: unless-stopped
        networks:
            - todo-task

    composer:
        container_name: api-todo-composer
        image: composer:latest
        working_dir: /var/www
        volumes:
            - ./:/var/www
        depends_on:
            - php
        networks:
            - todo-task

volumes:
    pgdata:
    pgadmin-data:
    esdata01:
        driver: local
    kibanadata:
        driver: local
    php:
        driver: "local"

networks:
    todo-task:
        driver: bridge
